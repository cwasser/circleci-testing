# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! WARNING !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#
# DO NOT EDIT THIS FILE MANUALLY!
#
# THIS FILE IS AUTO-GENERATED BY `web-server/bin/gen-dockerfiles`!
#
# In case you really need to change this file, edit the
# `web-server/resources/docker/Dockerfile.template` and execute
# `make dockerfiles` in the `web-server` directory.
#
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! WARNING !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

FROM debian:stretch-slim

ENTRYPOINT ["/usr/local/sbin/nginx"]
EXPOSE 80
EXPOSE 443
STOPSIGNAL SIGTERM
WORKDIR /srv/www
ENV DEBIAN_FRONTEND="teletype" LANG="C.UTF-8"

COPY resources/docker/vendor-keys.pub /tmp/vendor-keys.pub

RUN set -exu && \
info() { printf '\n\033[33m%s\033[0m\n\n' "$1"; } && \
#
info 'Creating nginx system user' && \
adduser --system --group --disabled-password --disabled-login --no-create-home nginx && \
#
info 'Installing dependencies' && \
mkdir -p /etc/dpkg/dpkg.conf.d && \
touch /etc/dpkg/dpkg.conf.d/01_nodoc && \
for e in 'doc-base doc groff info linda lintian man';\
	do echo "path-exclude /usr/share/${e}/*" >> /etc/dpkg/dpkg.conf.d/01_nodoc;\
done && \
apt-get update -qq && \
apt-get install -qqy --auto-remove --no-install-recommends --no-install-suggests {{build_dependencies}} {{dependencies}} && \
#
info 'Importing vendor GPG keys' && \
gpg --import /tmp/vendor-keys.pub && \
#
info 'Creating download script' && \
cd /usr/local/bin && \
echo '#!/bin/sh' > dl && \
echo 'printf "\n\033[33mDownloading %s source and verifying authenticity\033[0m\n\n" "$2"' >> dl && \
echo 'curl -sLSo $2.tar.gz $1/$2-$3.tar.gz' >> dl && \
echo 'echo "$4 *$2.tar.gz" | sha256sum -c -' >> dl && \
echo 'curl -sLSo $2.tar.gz.$5 $1/$2-$3.tar.gz.$5' >> dl && \
echo 'gpg --batch --verify $2.tar.gz.$5 $2.tar.gz' >> dl && \
echo 'tar -xzf $2.tar.gz' >> dl && \
echo 'mv $2-$3 $2' >> dl && \
chmod +x dl && \
#
cd /usr/local/src && \
dl 'http://zlib.net' 'zlib' '{{zlib_version}}' '{{zlib_digest}}' 'asc' && \
dl 'ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre' 'pcre' '{{pcre_version}}' '{{pcre_digest}}' 'sig' && \
dl 'https://www.openssl.org/source' 'openssl' '{{openssl_version}}' '{{openssl_digest}}' 'asc' && \
dl 'https://nginx.org/download' 'nginx' '{{nginx_version}}' '{{nginx_digest}}' 'asc' && \
#
info 'Configuring Nginx {{nginx_version}}' && \
cd nginx && \
./configure \
#
--user=nginx \
--group=nginx \
#
--prefix=/usr/local \
--sbin-path=/usr/local/sbin \
#
--with-cc-opt='-D_FORTIFY_SOURCE=2 -fstack-protector-strong -fpic -fpie -O2 -pipe' \
--with-ld-opt='-pie -s -Wl,-O1 -Wl,--hash-style,gnu -Wl,-z,relro -Wl,-z,now' \
#
--conf-path=/usr/local/etc/nginx/main.ngx \
--error-log-path=/var/log/nginx/error.log \
--http-log-path=/var/log/nginx/access.log \
#
--http-client-body-temp-path=/var/cache/nginx/client-bodies \
--http-fastcgi-temp-path=/var/cache/nginx/fastcgi \
#
--with-http_ssl_module \
--with-http_v2_module \
--with-openssl-opt='-D_FORTIFY_SOURCE=2 -fstack-protector-strong -fpic -fpie -pipe enable-ec_nistp_64_gcc_128 no-comp -no-deprecated no-dso no-dtls no-dynamic-engine no-engine no-err no-heartbeats no-idea no-md2 no-md4 no-mdc2 no-rc2 no-rc4 no-rc5 no-static-engine' \
--with-openssl=../openssl \
--with-pcre=../pcre \
--with-pcre-jit \
--with-pcre-opt='-D_FORTIFY_SOURCE=2 -fstack-protector-strong -fpic -fpie -O2 -pipe' \
--with-zlib=../zlib \
--with-zlib-opt='-D_FORTIFY_SOURCE=2 -fstack-protector-strong -fpic -fpie -O2 -pipe' \
#
--without-http_access_module \
--without-http_auth_basic_module \
--without-http_autoindex_module \
--without-http_empty_gif_module \
--without-http_geo_module \
--without-http_memcached_module \
--without-http_proxy_module \
--without-http_referer_module \
--without-http_scgi_module \
--without-http_split_clients_module \
--without-http_ssi_module \
--without-http_upstream_ip_hash_module \
--without-http_userid_module \
--without-http_uwsgi_module && \
#
info 'Compiling Nginx {{nginx_version}}' && \
make -sj `nproc` && \
#
info 'Installing Nginx {{nginx_version}}' && \
make install && \
strip --strip-all /usr/local/sbin/nginx && \
#
mkdir -p /var/cache/nginx/client-bodies /var/cache/nginx/fastcgi /var/log/nginx && \
ln -sf /dev/stdout /var/log/nginx/access.log && \
ln -sf /dev/stderr /var/log/nginx/error.log && \
#
info 'Cleaning system' && \
apt-get purge -qqy --auto-remove {{build_dependencies}} && \
apt-get clean -qqy && \
rm -rf \
/etc/dpkg/dpkg.conf.d/ \
/root/.gnupg/ \
/tmp/* \
/usr/local/bin/dl \
/usr/local/etc/nginx/ \
/usr/local/src/ \
/usr/share/doc-base/ \
/usr/share/doc/ \
/usr/share/groff/ \
/usr/share/info/ \
/usr/share/linda/ \
/usr/share/lintian/ \
/usr/share/man/ \
/var/lib/apt/lists/* \
/var/tmp/* \
&& \
nginx -V && \
printf '\n\033[32mFinished!!!\033[0m\n\n'
