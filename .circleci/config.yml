version: 2

workflows:
  version: 2
  Pipeline:
    jobs:
      - Checkout

      - Build web-server dev image:
          filters: {branches: {only: [master]}}
          requires: ["Checkout"]
      - Build web-service dev image:
          filters: {branches: {only: [master]}}
          requires: ["Checkout", "Build web-server dev image"]

      - Run tests:
          requires: ["Checkout", "Build web-service dev image"]

      - Build web-server image:
          requires: ["Run tests"]
      - Build web-service image:
          requires: ["Run tests"]

#      - run integration tests
#      - run contract tests
#      - run end-to-end tests

#      - deploy

jobs:
  Checkout:
    docker: [{image: fleshgrinder/docker-buildpack}]
    working_directory: ~/src
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Create docker files
          command: make dockerfiles
      - persist_to_workspace: {root: ~/src, paths: [.]}

  Build web-server dev image:
    docker: [{image: fleshgrinder/docker-buildpack}]
    working_directory: ~/src/web-server
    steps:
      - attach_workspace: {at: ~/src}
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-web-server-dev-{{ checksum "Dockerfile.web-server-dev" }}
            - v1-web-server-dev
      - run:
          name: Load cache
          command: |
            set +o pipefail
            docker load -i /cache/docker/web-server-dev.tar | true
            docker images
      - run:
          name: Build image
          command: |
            COMMIT_RANGE=$(echo "${CIRCLE_COMPARE_URL}" | sed 's:^.*/compare/::g')
            if git diff "${COMMIT_RANGE}" --name-status | grep Dockerfile.web-server
              then make dev-image
              else touch /skip
            fi
      - run:
          name: Export image
          command: |
            if [ -f /skip ]
            then
              echo skipping
            else
              mkdir -p /cache/docker
              docker save -o /cache/docker/web-server-dev.tar fleshgrinder/web-server-dev
            fi
      - save_cache:
          key: v1-web-server-dev-{{ checksum "Dockerfile.web-server-dev" }}
          paths: [/cache/docker/web-server-dev.tar]
      - run:
          name: Push image
          command: |
            if [ -f /skip ]
            then
              echo skipping
            else
              docker login -u fleshgrinder -p "${DOCKER_PASS}"
              docker push fleshgrinder/web-server-dev:latest
            fi

  Build web-service dev image:
    docker: [{image: fleshgrinder/docker-buildpack}]
    working_directory: ~/src/web-service
    steps:
      - attach_workspace: {at: ~/src}
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-web-service-dev-{{ checksum "Dockerfile.web-service-dev" }}
            - v1-web-service-dev
      - run:
          name: Load cache
          command: |
            set +o pipefail
            docker load -i /cache/docker/web-service-dev.tar | true
            docker images
      - run:
          name: Build image
          command: |
            COMMIT_RANGE=$(echo "${CIRCLE_COMPARE_URL}" | sed 's:^.*/compare/::g')
            if git diff "${COMMIT_RANGE}" --name-status | grep Dockerfile.web-service
              then make dev-image
              else touch /skip
            fi
      - run:
          name: Export image
          command: |
            if [ -f /skip ]
            then
              echo skipping
            else
              mkdir -p /cache/docker
              docker save -o /cache/docker/web-service-dev.tar fleshgrinder/web-service-dev
            fi
      - save_cache:
          key: v1-web-service-dev-{{ checksum "Dockerfile.web-service-dev" }}
          paths: [/cache/docker/web-service-dev.tar]
      - run:
          name: Push image
          command: |
            if [ -f /skip ]
            then
              echo skipping
            else
              docker login -u fleshgrinder -p "${DOCKER_PASS}"
              docker push fleshgrinder/web-service-dev:latest
            fi

  Run tests:
    machine:
      enabled: true
    working_directory: ~/src
    steps:
      - attach_workspace: {at: ~/src}
      - restore_cache:
          keys:
            - v1-web-server-dev
      - restore_cache:
          keys:
            - v1-web-service-dev
      - run:
          name: Load cache
          command: |
            set +o pipefail
            docker load -i /cache/docker/web-server-dev.tar | true
            docker load -i /cache/docker/web-service-dev.tar | true
            docker images
      - run:
          name: Install make v4
          command: |
            set +o pipefail
            cd /tmp
            wget http://ftp.gnu.org/gnu/make/make-4.1.tar.gz
            tar xvf make-4.1.tar.gz
            cd make-4.1/
            ./configure
            make
            sudo make install
            rm -rf make-4.1.tar.gz make-4.1
      - run:
          name: Execute tests
          command: |
            set +e
            /usr/local/bin/make test

  Build web-server image:
    docker: [{image: fleshgrinder/docker-buildpack}]
    working_directory: ~/src/web-server
    steps:
      - attach_workspace: {at: ~/src}
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-web-server-prod{{ checksum "Dockerfile.web-server-dev-prod" }}
            - v1-web-server-prod
          paths: [/cache/docker/web-server-prod.tar]
      - run:
          name: Load cache
          command: |
            set +o pipefail
            docker load -i /cache/docker/web-server-prod.tar | true
            docker images
      - run:
          name: Build image
          command: make prod-image
      - run:
          name: Export image
          command: |
            mkdir -p /cache/docker
            docker save -o /cache/docker/web-server-prod.tar fleshgrinder/web-server-prod
      - save_cache:
          key: v1-web-server-prod-{{ checksum "Dockerfile.web-server-prod" }}
          paths: [/cache/docker/web-server-prod.tar]
      - run:
          name: Push image
          command: |
            if [ "${CIRCLE_BRANCH}" = master ]; then
              docker login -u fleshgrinder -p "${DOCKER_PASS}"
              docker push fleshgrinder/web-server-prod:latest
            fi

  Build web-service image:
    docker: [{image: fleshgrinder/docker-buildpack}]
    working_directory: ~/src/web-service
    steps:
      - attach_workspace: {at: ~/src}
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-web-service-prod{{ checksum "Dockerfile.web-service-prod" }}
            - v1-web-service-prod
          paths: [/cache/docker/web-service-prod.tar]
      - run:
          name: Load cache
          command: |
            set +o pipefail
            docker load -i /cache/docker/web-service-prod.tar | true
            docker images
      - run:
          name: Build image
          command: make prod-image
      - run:
          name: Export image
          command: |
            mkdir -p /cache/docker
            docker save -o /cache/docker/web-service-prod.tar fleshgrinder/web-service-prod
      - save_cache:
          key: v1-web-service-prod-{{ checksum "Dockerfile.web-service-prod" }}
          paths: [/cache/docker/web-service-prod.tar]
      - run:
          name: Push image
          command: |
            if [ "${CIRCLE_BRANCH}" = master ]; then
              docker login -u fleshgrinder -p "${DOCKER_PASS}"
              docker push fleshgrinder/web-service-prod:latest
            fi
