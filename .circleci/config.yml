version: 2

src: &src /usr/local/src

alpine: &alpine
  docker: [{image: fleshgrinder/alpine-git-tar}]
  working_directory: *src

docker_buildpack: &docker_buildpack
  docker: [{image: fleshgrinder/docker-buildpack}]
  working_directory: *src

jobs:
  checkout:
    <<: *alpine
    steps:
      - checkout
      - persist_to_workspace: {root: *src, paths: [.]}

  build_web_service_test:
    <<: *docker_buildpack
    steps:
      - attach_workspace: {at: *src}
      - setup_remote_docker
      - restore_cache:
          keys:
            - web-service-test-{{ checksum "web-service/Dockerfile.web-service-test" }}
          paths: [/var/cache/docker/web-service-test.tar]
      - run:
          name: Load Docker Cache
          command: |
            set +o pipefail
            docker load -i /var/cache/web-service-test.tar | true
      - run:
          name: Build Web Service Test
          command: |
            COMMIT_RANGE=$(echo "${CIRCLE_COMPARE_URL}" | sed 's:^.*/compare/::g')
            echo "${COMMIT_RANGE}"
            RESULT=$(git diff "${COMMIT_RANGE}" --name-status | grep web-service/Dockerfile.web-service-test)
            echo "${RESULT}"
            if [ "${RESULT}" = "" ]
              then touch /tmp/skip-web-service-test
              else make -C web-service web-service-test
            fi
      - run:
          name: Save Docker Cache
          command: |
            if [ ! -f /tmp/skip-web-service-test ]; then
              mkdir -p /var/cache/docker
              docker save -o /var/cache/docker/web-service-test.tar fleshgrinder/web-service-test
            fi
      - save_cache:
          key: web-service-test-{{ checksum "web-service/Dockerfile.web-service-test" }}
          paths: [/var/cache/docker/web-service-test.tar]
      - run:
          name: Push Docker Image
          command: |
            if [ ! -f /tmp/skip-web-service-test ]; then
              docker login -u fleshgrinder -p "${DOCKER_PASS}"
              docker push fleshgrinder/web-service-test:latest
            fi

  test_web_service:
    docker: [{image: fleshgrinder/web-service-test}]
    working_directory: /usr/local/src/web-service
    steps:
      - attach_workspace: {at: *src}
      - restore_cache:
          keys: [composer]
          paths: [/root/.composer]
      - run: composer install --no-suggest
      - save_cache:
          key: composer
          paths: [/root/.composer]
      - run: composer test
      - store_artifacts:
          path: target/logs/coverage

#      - run:
#          name: Install Dependencies
#          command: make -C web-service install VERBOSE=1
#      - save_cache:
#          key: composer
#          paths: [/var/cache/composer]
#      - run:
#          name: Execute Web Service Tests
#          command: make -c web-service test VERBOSE=1

  # TODO only build image if their Dockerfile has changed!
#  build_web_server:
#    <<: *docker_buildpack
#    steps:
#      - attach_workspace: {at: *src}
#      - setup_remote_docker
#      - restore_cache:
#          keys: ['web-server-{{ .Branch }}']
#          paths: ['/var/cache/web-server.tar']
#      - run:
#          name: Load Docker Cache
#          command: |
#            set +o pipefail
#            docker load -i /var/cache/web-server.tar | true
#      - run:
#          name: Build Web Server
#          command: |
#            make web-server WEB_SERVER_TAG=${CIRCLE_BUILD_NUM}
#            docker images
#      - run:
#          name: Save Docker Cache
#          command: |
#            mkdir -p /var/cache
#            docker save -o /var/cache/web-server.tar fleshgrinder/web-server
#      - save_cache:
#          key: web-server-{{ .Branch }}-{{ epoch }}
#          paths: ['/var/cache/web-server.tar']
      # TODO push to registry

  # TODO only build image if their Dockerfile has changed!
#  build_web_service:
#    <<: *docker_buildpack
#    steps:
#      - attach_workspace: {at: *src}
#      - setup_remote_docker
#      - restore_cache:
#          keys: ['web-service-{{ .Branch }}']
#          paths: ['/var/cache/web-service.tar']
#      - run:
#          name: Load Docker Cache
#          command: |
#            set +o pipefail
#            docker load -i /var/cache/web-service.tar | true
#      - run:
#          name: Build Web Service
#          command: |
#            make web-service WEB_SERVICE_TAG=${CIRCLE_BUILD_NUM}
#            docker images
#      - run:
#          name: Save Docker Cache
#          command: |
#            mkdir -p /var/cache
#            docker save -o /var/cache/web-service.tar fleshgrinder/web-service
#      - save_cache:
#          key: web-service-{{ .Branch }}-{{ epoch }}
#          paths: ['/var/cache/web-service.tar']
      # TODO push to registry

workflows:
  version: 2
  pipeline:
    jobs:
      - checkout
      - build_web_service_test:
          filters: {branches: {only: [master]}}
          requires: [checkout]
      - test_web_service:
          requires: [checkout, build_web_service_test]
#      - build_web_server:
#          requires: [test_web_service]
#      - build_web_service:
#          requires: [test_web_service]
